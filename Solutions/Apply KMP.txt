// done
#include <bits/stdc++.h>

using namespace std;
#define MOD 1000000007
#define inf (ll)1e18

class SubStringMatch {
public:
  string PAT;
  vector<int> lps;
  int M;

  SubStringMatch(string pat) {
    PAT = pat;
    M = pat.length();
    lps.resize(M, 0);
    compute();
  }

  void compute() {
    int len = 0;
    lps[0] = 0;
    int i = 1;
    while (i < M) {
      if (PAT[i] == PAT[len])
        len++, lps[i] = len, i++;
      else if (len != 0)
        len = lps[len - 1];
      else
        lps[i] = 0, i++;
    }
  }

  int match(string TXT) {
    int i = 0, j = 0, N = TXT.length(), cnt = 0;
    while (i < N) {
      if (PAT[j] == TXT[i])
        i++, j++;
      if (j == M)
        j = lps[j - 1], cnt++;
      else if (i < N && PAT[j] != TXT[i])
        if (j != 0)
          j = lps[j - 1];
        else
          i++;
    }
    return cnt;
  }
};

class ApplyKMP {
public:
  void solve() {
    string pat, txt;
    cin >> pat >> txt;
    SubStringMatch ssm(pat);
    cout << ssm.match(txt) << '\n';
  }
};

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0), cout.tie(0);
  ApplyKMP solve;
  solve.solve();
  return 0;
}